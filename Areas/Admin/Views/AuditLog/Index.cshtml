@{
    ViewData["Title"] = "Audit Log";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var today = DateTime.UtcNow.Date;
    var thirtyDaysAgo = today.AddDays(-30);
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Audit Log Entries</h4>
            </div>
            <div class="card-body">
                <!-- Filter Form -->
                <form id="auditlog-filter" class="row g-3 mb-3">
                    <div class="col-md-3">
                        <input type="text" class="form-control" name="keyword" placeholder="Keyword" />
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="form-control" name="user" placeholder="User" />
                    </div>
                    <div class="col-md-3">
                        <input type="date" class="form-control" name="startDate" placeholder="Start Date"
                               value="@thirtyDaysAgo.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-3">
                        <input type="date" class="form-control" name="endDate" placeholder="End Date"
                               value="@today.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-primary">Filter</button>
                        <button type="button" id="reset-filter" class="btn btn-secondary">Reset</button>
                    </div>
                </form>
                <div id="auditlog-list">
                    <div class="table-responsive">
                        <table class="table align-middle mb-0" id="auditlog-table">
                            <thead class="table-light">
                                <tr>
                                    <th scope="col" data-sort="id">ID</th>
                                    <th scope="col" data-sort="action">Action</th>
                                    <th scope="col" data-sort="timestamp">Timestamp</th>
                                    <th scope="col" data-sort="userId">User ID</th>
                                </tr>
                            </thead>
                            <tbody class="list">
                                <!-- Data will be loaded by JS -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/list.js/2.3.1/list.min.js"></script>
    <script>
        function loadAuditLogs(params = {}) {
            const url = new URL('@Url.Action("Data", "AuditLog", new { area = "Admin" })', window.location.origin);
            Object.keys(params).forEach(key => {
                if (params[key]) url.searchParams.append(key, params[key]);
            });

            fetch(url)
                .then(response => response.json())
                .then(result => {
                    const tbody = document.querySelector('#auditlog-table tbody');
                    tbody.innerHTML = '';
                    if (result.data && Array.isArray(result.data) && result.data.length > 0) {
                        result.data.forEach((entry, idx) => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                <td class="id">${entry.id ?? (idx + 1)}</td>
                                <td class="action">${entry.action ?? entry.level ?? '-'}</td>
                                <td class="timestamp">${entry.timestamp ? new Date(entry.timestamp).toLocaleString() : '-'}</td>
                                <td class="userId">${entry.userId ?? '-'}</td>
                            `;
                            tbody.appendChild(row);
                        });
                        // Initialize List.js only if there is at least one row
                        new List('auditlog-list', {
                            valueNames: ['id', 'action', 'timestamp', 'userId'],
                            listClass: 'list'
                        });
                    }
                });
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Set default dates if empty
            const startDateInput = document.querySelector('input[name="startDate"]');
            const endDateInput = document.querySelector('input[name="endDate"]');
            if (startDateInput && !startDateInput.value) {
                const d = new Date();
                d.setDate(d.getDate() - 30);
                startDateInput.value = d.toISOString().slice(0, 10);
            }
            if (endDateInput && !endDateInput.value) {
                endDateInput.value = new Date().toISOString().slice(0, 10);
            }

            loadAuditLogs({
                startDate: startDateInput.value,
                endDate: endDateInput.value
            });

            const filterForm = document.getElementById('auditlog-filter');
            if (filterForm) {
                filterForm.addEventListener('submit', function (e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    const params = {};
                    formData.forEach((value, key) => {
                        params[key] = value;
                    });
                    loadAuditLogs(params);
                });
            }

            const resetBtn = document.getElementById('reset-filter');
            if (resetBtn) {
                resetBtn.addEventListener('click', function () {
                    filterForm.reset();
                    // Reset to default dates
                    if (startDateInput) {
                        const d = new Date();
                        d.setDate(d.getDate() - 30);
                        startDateInput.value = d.toISOString().slice(0, 10);
                    }
                    if (endDateInput) {
                        endDateInput.value = new Date().toISOString().slice(0, 10);
                    }
                    loadAuditLogs({
                        startDate: startDateInput.value,
                        endDate: endDateInput.value
                    });
                });
            }
        });
    </script>
}